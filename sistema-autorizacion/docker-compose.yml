services:
  database:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Cayetano123
      POSTGRES_DB: baselisto
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  redis:
    image: redis:alpine
    container_name: redis
    environment:
      REDIS_PASSWORD: LIMBO
    command: ["redis-server", "--requirepass", "LIMBO"]
    ports:
      - "6380:6379"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "LIMBO", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend/.env.local:/app/.env
      - ./backend/ssl:/app/ssl
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network
    command: ["sh", "-c", "wait-for-it database:5432 --timeout=30 -- wait-for-it redis:6379 --timeout=30 -- node dist/server.js"]
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:80"
      - "443:443"
    volumes:
      - ./frontend/.env.local:/app/.env
      - ./frontend/ssl:/etc/ssl/certs
    networks:
      - app_network
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
