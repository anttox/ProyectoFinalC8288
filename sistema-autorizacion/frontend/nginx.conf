events {
    worker_connections 2048;  # Aumentar conexiones máximas por trabajador
}

http {
    resolver 127.0.0.11 valid=30s;  # Resolver dinámico para Docker DNS

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    # Habilitar Gzip
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_proxied any;
    gzip_vary on;

    # Definición de upstream
    upstream backend {
        server backend:3000;
    }

    # Redirección de HTTP a HTTPS
    server {
        listen 80;
        server_name localhost;

        return 301 https://$host$request_uri;
    }

    # Configuración del servidor HTTPS
    server {
        listen 443 ssl;
        server_name localhost;

        # Ruta de certificados SSL
        ssl_certificate /etc/ssl/certs/backend.crt;
        ssl_certificate_key /etc/ssl/certs/backend.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'HIGH:!aNULL:!MD5';
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;

        location / {
            root /usr/share/nginx/html;  # Ruta a tu aplicación frontend
            index index.html;
            try_files $uri $uri/ /index.html;

            # Configuración de CORS
            set $allowed_origin "";
            if ($http_origin ~* "^https?://localhost(:[0-9]+)?$") {
                set $allowed_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$allowed_origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";

            if ($request_method = 'OPTIONS') {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        location /api/ {
            proxy_pass https://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            set $allowed_origin "";
            if ($http_origin ~* "^https?://localhost(:[0-9]+)?$") {
                set $allowed_origin $http_origin;
            }
            add_header Access-Control-Allow-Origin "$allowed_origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";

            if ($request_method = 'OPTIONS') {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        location /static/ {
            root /usr/share/nginx/html;
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri $uri/ =404;
        }
    }
}
